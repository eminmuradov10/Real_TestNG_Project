<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="22" passed="16" failed="4" skipped="2">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-06-19T11:08:26 CEST" name="Suite" finished-at="2024-06-19T11:08:35 CEST" duration-ms="9587">
    <groups>
    </groups>
    <test started-at="2024-06-19T11:08:26 CEST" name="Test" finished-at="2024-06-19T11:08:35 CEST" duration-ms="9307">
      <class name="Real_Project.First_Real_Program">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String)[pri:0, instance:Real_Project.First_Real_Program@44ebcd03]" started-at="2024-06-19T11:08:26 CEST" name="setUp" finished-at="2024-06-19T11:08:30 CEST" duration-ms="3722" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://amazon.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12345]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="AdmissionBrokenlinks()[pri:0, instance:Real_Project.First_Real_Program@44ebcd03]" started-at="2024-06-19T11:08:30 CEST" name="AdmissionBrokenlinks" finished-at="2024-06-19T11:08:30 CEST" duration-ms="46" status="SKIP">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[msg]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: msg
at Real_Project.First_Real_Program.AdmissionBrokenlinks(First_Real_Program.java:86)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:842)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AdmissionBrokenlinks -->
        <test-method signature="AdmissionLogin(int,int)[pri:0, instance:Real_Project.First_Real_Program@44ebcd03]" started-at="2024-06-19T11:08:30 CEST" name="AdmissionLogin" data-provider="mydata1" finished-at="2024-06-19T11:08:30 CEST" duration-ms="14" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AdmissionLogin -->
        <test-method signature="AdmissionLogin(int,int)[pri:0, instance:Real_Project.First_Real_Program@44ebcd03]" started-at="2024-06-19T11:08:30 CEST" name="AdmissionLogin" data-provider="mydata1" finished-at="2024-06-19T11:08:30 CEST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AdmissionLogin -->
        <test-method signature="AdmissionLogin(int,int)[pri:0, instance:Real_Project.First_Real_Program@44ebcd03]" started-at="2024-06-19T11:08:30 CEST" name="AdmissionLogin" data-provider="mydata1" finished-at="2024-06-19T11:08:30 CEST" duration-ms="13" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AdmissionLogin -->
        <test-method signature="AdmissionLogin(java.lang.String,java.lang.String)[pri:0, instance:Real_Project.First_Real_Program@44ebcd03]" started-at="2024-06-19T11:08:30 CEST" name="AdmissionLogin" data-provider="mydata1" finished-at="2024-06-19T11:08:30 CEST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[user1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AdmissionLogin -->
        <test-method signature="AdmissionLogin(java.lang.String,java.lang.String)[pri:0, instance:Real_Project.First_Real_Program@44ebcd03]" started-at="2024-06-19T11:08:30 CEST" name="AdmissionLogin" data-provider="mydata1" finished-at="2024-06-19T11:08:30 CEST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[user2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AdmissionLogin -->
        <test-method signature="AdmissionLogin(java.lang.String,java.lang.String)[pri:0, instance:Real_Project.First_Real_Program@44ebcd03]" started-at="2024-06-19T11:08:30 CEST" name="AdmissionLogin" data-provider="mydata1" finished-at="2024-06-19T11:08:30 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[user3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AdmissionLogin -->
        <test-method signature="Counter()[pri:0, instance:Real_Project.First_Real_Program@44ebcd03]" started-at="2024-06-19T11:08:30 CEST" name="Counter" finished-at="2024-06-19T11:08:30 CEST" duration-ms="4" status="SUCCESS_PERCENTAGE_FAILURE">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at Real_Project.First_Real_Program.Counter(First_Real_Program.java:107)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:842)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Counter -->
        <test-method signature="Counter()[pri:0, instance:Real_Project.First_Real_Program@44ebcd03]" started-at="2024-06-19T11:08:30 CEST" name="Counter" finished-at="2024-06-19T11:08:30 CEST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Counter -->
        <test-method signature="verifyLogo()[pri:0, instance:Real_Project.First_Real_Program@44ebcd03]" started-at="2024-06-19T11:08:30 CEST" name="verifyLogo" finished-at="2024-06-19T11:08:30 CEST" duration-ms="134" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at Real_Project.First_Real_Program.verifyLogo(First_Real_Program.java:75)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:842)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLogo -->
        <test-method signature="verifyTitle()[pri:0, instance:Real_Project.First_Real_Program@44ebcd03]" started-at="2024-06-19T11:08:30 CEST" name="verifyTitle" finished-at="2024-06-19T11:08:30 CEST" duration-ms="28" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTitle -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Real_Project.First_Real_Program@44ebcd03]" started-at="2024-06-19T11:08:30 CEST" name="tearDown" finished-at="2024-06-19T11:08:35 CEST" duration-ms="5209" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Real_Project.First_Real_Program -->
      <class name="Real_Project.Program_2">
        <test-method signature="AdmissionLogin()[pri:0, instance:Real_Project.Program_2@4f6ee6e4]" started-at="2024-06-19T11:08:35 CEST" name="AdmissionLogin" finished-at="2024-06-19T11:08:35 CEST" duration-ms="0" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
expected [true] but found [false],
expected [true] but found [false],
expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
expected [true] but found [false],
expected [true] but found [false],
expected [true] but found [false]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at Real_Project.Program_2.AdmissionLogin(Program_2.java:59)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:842)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AdmissionLogin -->
      </class> <!-- Real_Project.Program_2 -->
    </test> <!-- Test -->
    <test started-at="2024-06-19T11:08:26 CEST" name="Test1" finished-at="2024-06-19T11:08:35 CEST" duration-ms="9587">
      <class name="Real_Project.First_Real_Program">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String)[pri:0, instance:Real_Project.First_Real_Program@4550bb58]" started-at="2024-06-19T11:08:26 CEST" name="setUp" finished-at="2024-06-19T11:08:30 CEST" duration-ms="4188" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://amazon.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12345]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="AdmissionBrokenlinks()[pri:0, instance:Real_Project.First_Real_Program@4550bb58]" started-at="2024-06-19T11:08:30 CEST" name="AdmissionBrokenlinks" finished-at="2024-06-19T11:08:30 CEST" duration-ms="2" status="SKIP">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[msg]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: msg
at Real_Project.First_Real_Program.AdmissionBrokenlinks(First_Real_Program.java:86)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:842)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AdmissionBrokenlinks -->
        <test-method signature="AdmissionLogin(int,int)[pri:0, instance:Real_Project.First_Real_Program@4550bb58]" started-at="2024-06-19T11:08:30 CEST" name="AdmissionLogin" data-provider="mydata1" finished-at="2024-06-19T11:08:30 CEST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AdmissionLogin -->
        <test-method signature="AdmissionLogin(int,int)[pri:0, instance:Real_Project.First_Real_Program@4550bb58]" started-at="2024-06-19T11:08:30 CEST" name="AdmissionLogin" data-provider="mydata1" finished-at="2024-06-19T11:08:30 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AdmissionLogin -->
        <test-method signature="AdmissionLogin(int,int)[pri:0, instance:Real_Project.First_Real_Program@4550bb58]" started-at="2024-06-19T11:08:30 CEST" name="AdmissionLogin" data-provider="mydata1" finished-at="2024-06-19T11:08:30 CEST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AdmissionLogin -->
        <test-method signature="AdmissionLogin(java.lang.String,java.lang.String)[pri:0, instance:Real_Project.First_Real_Program@4550bb58]" started-at="2024-06-19T11:08:30 CEST" name="AdmissionLogin" data-provider="mydata1" finished-at="2024-06-19T11:08:30 CEST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[user1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AdmissionLogin -->
        <test-method signature="AdmissionLogin(java.lang.String,java.lang.String)[pri:0, instance:Real_Project.First_Real_Program@4550bb58]" started-at="2024-06-19T11:08:30 CEST" name="AdmissionLogin" data-provider="mydata1" finished-at="2024-06-19T11:08:30 CEST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[user2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AdmissionLogin -->
        <test-method signature="AdmissionLogin(java.lang.String,java.lang.String)[pri:0, instance:Real_Project.First_Real_Program@4550bb58]" started-at="2024-06-19T11:08:30 CEST" name="AdmissionLogin" data-provider="mydata1" finished-at="2024-06-19T11:08:30 CEST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[user3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AdmissionLogin -->
        <test-method signature="Counter()[pri:0, instance:Real_Project.First_Real_Program@4550bb58]" started-at="2024-06-19T11:08:30 CEST" name="Counter" finished-at="2024-06-19T11:08:30 CEST" duration-ms="8" status="SUCCESS_PERCENTAGE_FAILURE">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at Real_Project.First_Real_Program.Counter(First_Real_Program.java:107)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:842)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Counter -->
        <test-method signature="Counter()[pri:0, instance:Real_Project.First_Real_Program@4550bb58]" started-at="2024-06-19T11:08:30 CEST" name="Counter" finished-at="2024-06-19T11:08:30 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Counter -->
        <test-method signature="verifyLogo()[pri:0, instance:Real_Project.First_Real_Program@4550bb58]" started-at="2024-06-19T11:08:30 CEST" name="verifyLogo" finished-at="2024-06-19T11:08:30 CEST" duration-ms="84" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at Real_Project.First_Real_Program.verifyLogo(First_Real_Program.java:75)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:842)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLogo -->
        <test-method signature="verifyTitle()[pri:0, instance:Real_Project.First_Real_Program@4550bb58]" started-at="2024-06-19T11:08:30 CEST" name="verifyTitle" finished-at="2024-06-19T11:08:30 CEST" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTitle -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Real_Project.First_Real_Program@4550bb58]" started-at="2024-06-19T11:08:30 CEST" name="tearDown" finished-at="2024-06-19T11:08:35 CEST" duration-ms="5217" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Real_Project.First_Real_Program -->
      <class name="Real_Project.Program_2">
        <test-method signature="AdmissionLogin()[pri:0, instance:Real_Project.Program_2@4ec4f3a0]" started-at="2024-06-19T11:08:35 CEST" name="AdmissionLogin" finished-at="2024-06-19T11:08:35 CEST" duration-ms="0" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
expected [true] but found [false],
expected [true] but found [false],
expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
expected [true] but found [false],
expected [true] but found [false],
expected [true] but found [false]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at Real_Project.Program_2.AdmissionLogin(Program_2.java:59)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:842)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AdmissionLogin -->
      </class> <!-- Real_Project.Program_2 -->
    </test> <!-- Test1 -->
  </suite> <!-- Suite -->
</testng-results>
